from enum import Enum
from abc import ABC, abstractmethod

class CustomBaseException(Exception) :
    def __init__(self, msg =""):
        self.msg = msg
        super().__init__(self.msg)
    @abstractmethod
    def returnExitCode(self):
        pass

class ExitCodes(Enum):
    GENERIC_ERROR = 1
    INCORRECT_INPUT = 2
    CONFIG_NOT_FOUND = 3
    LOGGING_SETUP_FAILED = 4
    CONFIG_VALIDATION_FAILED = 5
    COMPUTE_NW_VALUES_ERROR = 6
    FETCH_SDDC_DETAILS_ERROR = 7
    INVALID_REGION = 8
    RP_NOT_REGISTERED = 9
    FEATURE_NOT_REGISTERED = 10
    INTERNET_NOT_ENABLED = 11
    GENERIC_ONBOARD_ERROR = 21
    SDDC_ALREADY_ONBOARDED = 22
    VCENTER_ENV_FAILURE = 23
    ARC_APPLIANCE_VALIDATE_FAILURE = 24
    ARC_APPLIANCE_PREPARE_FAILURE = 25
    ARC_APPLIANCE_DEPLOY_FAILURE = 26
    ARC_APPLIANCE_CREATE_FAILURE = 27
    K8s_EXTN_CREATE_FAILURE = 28
    CL_CREATE_FAILURE = 29
    VCENTER_CREATE_FAILURE = 30
    VCENTER_REGISTER_FAILURE = 31
    GENERIC_OFFBOARD_FAILURE = 41
    VCENTER_DEREGISTER_FAILURE = 42
    VCENTER_DELETE_FAILURE = 43
    CL_DELETE_FAILURE = 44
    K8s_EXTN_DELETE_FAILURE = 45
    ARC_APPLIANCE_DELETE_FAILURE = 46
