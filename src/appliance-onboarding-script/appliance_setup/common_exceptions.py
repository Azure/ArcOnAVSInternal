from enum import Enum
from abc import ABC, abstractmethod

class CustomBaseException(Exception) :
    def __init__(self, msg =""):
        self.msg = msg
        super().__init__(self.msg)
    @abstractmethod
    def returnExitCode(self):
        pass

class ExitCodes(Enum):
    GENERIC_ERROR = 1
    INCORRECT_INPUT = 2
    CONFIG_NOT_FOUND = 3
    LOGGING_SETUP_FAILED = 4
    CONFIG_VALIDATION_FAILED = 5
    COMPUTE_NW_VALUES_ERROR = 6
    FETCH_SDDC_DETAILS_ERROR = 7
    INVALID_REGION = 8
    RP_NOT_REGISTERED = 9
    FEATURE_NOT_REGISTERED = 10
    INTERNET_NOT_ENABLED = 11
    CREATION_ERROR = 12
    DELETION_ERROR = 13
    AZ_CMD_ERROR = 14
    GENERIC_ONBOARD_ERROR = 31
    SDDC_ALREADY_ONBOARDED = 32
    VCENTER_ENV_FAILURE = 33
    ARC_APPLIANCE_VALIDATE_FAILURE = 34
    ARC_APPLIANCE_PREPARE_FAILURE = 35
    ARC_APPLIANCE_DEPLOY_FAILURE = 36
    ARC_APPLIANCE_CREATE_FAILURE = 37
    ARC_APPLIANCE_NOT_RUNNING_FAILURE = 38
    K8s_EXTN_CREATE_FAILURE = 39
    CL_CREATE_FAILURE = 40
    VCENTER_CREATE_FAILURE = 41
    VCENTER_REGISTER_FAILURE = 42
    GENERIC_OFFBOARD_FAILURE = 51
    VCENTER_DEREGISTER_FAILURE = 52
    VCENTER_DELETE_FAILURE = 53
    CL_DELETE_FAILURE = 54
    K8s_EXTN_DELETE_FAILURE = 55
    ARC_APPLIANCE_DELETE_FAILURE = 56
